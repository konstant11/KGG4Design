@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@model Demo.AspNetCore.ServerSentEvents.Model.ChatViewModel

@{
    Layout = "~/Views/Shared/_Layoutdev.cshtml";
    @*Layout = null;*@
}
<head>
    <link href="//netdna.bootstrapcdn.com/bootstrap/3.1.0/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css">
    <link href="/css/chat.css" rel="stylesheet" id="chat-css">
    <script src="//code.jquery.com/jquery-1.11.1.min.js"></script>
    <script src="//netdna.bootstrapcdn.com/bootstrap/3.1.0/js/bootstrap.min.js"></script>
    <script src="/js/chat.js"></script>
    <script src="/js/chatmessadecontainer.js"></script>
    <script src="/js/fingerprint.js"></script>
    <script>var GetcurUser = function({ getenv('USER');});</script>
    <!------Include the above in your HEAD tag ---------->
</head>
<div class="container" style="height:auto;">
<div class="row chat-window col-xs-5 col-md-3 h-100" id="chat_window_1" style="margin-left:10px;max-height:100%;">
<div class="col-xs-12 col-md-12">
    <div class="panel panel-default">
        <div class="panel-heading top-bar">
            <div class="col-sm-1 col-xs-1">
                <h3 class="panel-title">
                    <span class="glyphicon glyphicon-comment">
                    </span>
                </h3>
            </div>
            <div id="inp-my-name" class="col-sm-3 col-xs-3">
                <input id="my-name" type="text" class="form-control input-sm chat_input" placeholder="Enter your name..." />
            </div>
            <div id="inp-my-name-label" class="col-md-3 col-xs-3" style="display:none;">
                <b id="inp-my-name-label-val"> </b>
            </div>
            <div id="start-chat" class="col-sm-6 col-xs-6">
                <a href="#" id="new_chat"><span class="glyphicon glyphicon-plus"></span> Start Chat</a>
            </div>
            <div id="end-chat" class="col-sm-6 col-xs-6" style="display:none;">
                <a href="#" id="end_chat"><span class="glyphicon glyphicon-remove"></span> End Chat</a>
            </div>
            <div class="col-md-2 col-xs-2" style="text-align: right;">
                <a href="#"><span id="minim_chat_window" class="glyphicon glyphicon-minus icon_minim"></span></a>
                <a href="#"><span class="glyphicon glyphicon-remove icon_close" data-id="chat_window_1"></span></a>
            </div>
        </div>
            <div id="chat-messages-panel" class="panel-body msg_container_base">
            </div>
            <div class="panel-footer">
                <div class="input-group">
                    <input id="btn-input" type="text" class="form-control input-sm chat_input" style="display:none;" placeholder="Write your message here..." />
                    <span class="input-group-btn">
                        <button class="btn btn-primary btn-sm" id="btn-chat" style="display:none;">Send</button>
                    </span>
                </div>
            </div>
        </div>
</div>
</div>
<div id="chat-room-area" class="row  col-xs5, col-md-5">
</div>
<div class="btn-group dropdown">
<!--<button type = "button" id="start-stop" class="btn btn-default dropdown-toggle" data-toggle="dropdown">
    <span class="glyphicon glyphicon-cog"></span>
    <span class="sr-only">Toggle Dropdown</span>
</button>
<ul class="dropdown-menu" role="menu">
    <li><a href = "#" id="new_chat"><span class="glyphicon glyphicon-plus"></span> Start Chat</a></li>
    <li><a href = "#" id="save-transcript"><span class="glyphicon glyphicon-list"></span> Save Transcript</a></li>
    <li><a href = "#" id="end_chat"><span class="glyphicon glyphicon-remove"></span> End Chat</a></li>
    <li class="divider"></li>
    <li><a href = "#" id="see-transcript"><span class="glyphicon glyphicon-eye-close"></span> See Transcript</a></li>
</ul>-->
</div>
</div>
<script>

var source = new EventSource('/sse-cti-event');

source.onmessage = function(event) {
    try
    {
        var the_event = JSON.parse(event.data);
    }
    catch (e) {
        console.log(e);
    }
//showEventContent(the_event);
showNotification('Received Event:"' + event.type + '" with content:"' + event.data);
};

source.addEventListener('chat-message', function(event)
{
try
{
    var fingerprint = new Fingerprint().get();
            console.log('Received Event:"' + event.type + '" with content:"' + event.data);
            var the_message = JSON.parse(event.data);
    if(the_message.ChatActor.ActorId+'_'+the_message.ChatActor.ActorName != fingerprint+'_'+$("#my-name").val())
        AddReceiveMessage(the_message);
    else
        AddSentMessage(the_message);
    var panel = document.getElementById("chat-messages-panel");
    panel.scrollTop = panel.scrollHeight;;
//showEvent(event.data);
}
catch (ex)
{
console.log(ex);
}
});
source.addEventListener('chat-room', function(event)
{
    try
    {
        var fingerprint = new Fingerprint().get();
                console.log('Received Event:"' + event.type + '" with content:"' + event.data);
                var the_message = JSON.parse(event.data);
            AddParticipants(event.data);
    }
     catch (ex)
    {
     console.log(ex);
    }
});
</script>
